module top_module(clk, reset, in, out);
    input clk;
    input reset;    // Synchronous reset to state B
    input in;
    output out;//  
    reg out;
    
 always @(posedge clk) begin        //1 进行状态转移
		if (reset) state <= B;		// Reset to state B
        else state <= next;			// Otherwise, cause the state to transition
	end 
    
    always@(*) begin   // 2进行逻辑判断
		case (state)
			A: next = in ? A : B;
			B: next = in ? B : A;
		endcase
    end  
    
 always @ (* )// 进行输出赋值
       begin
		case(state)
			A:
                out=0;
            B:
                out=1;
            default
            out=1;
        endcase
    end 
    
        endmodule
